#!/bin/bash

# PKG_ARCHIVE_PATH & PKG_EXTRACT_PATH & PKG_INSTALL_PATH must be set
. pkg_init
if [[ -z "$PKG_ARCHIVE_PATH" || -z "$PKG_EXTRACT_PATH" || -z "$PKG_INSTALL_PATH" ]]; then
	echo "ERROR: package enviornment variables are not set"
	exit -1
fi

# install a premade package to the system
# param #1 = package archive file

archive_file_raw=$1
archive_file=
trace_file
if [[ -e "$PKG_ARCHIVE_PATH/$archive_file_raw.tar.xz" && -e "$PKG_TRACES_PATH/$archive_file_raw.trace ]]; then
	archive_file=$PKG_ARCHIVE_PATH/$archive_file_raw.tar.xz
	trace_file=$PKG_TRACES_PATH/$archive_file_raw.trace
# doesnt work with experimental install
#elif [[ -e "$archive_file_raw" ]]; then
#	archive_file=$archive_file_raw
else
	echo "ERROR: no such package"
	exit -1
fi
unset archive_file_raw

# make sure the extract folder exists
mkdir -p $PKG_EXTRACT_PATH
# clean extract folder of any any previous bad files (in case of previous failure)
if [[ "$(ls -A $PKG_EXTRACT_PATH)" ]]; then
	rm -rf $PKG_EXTRACT_PATH/*
fi
# dump the package archive into the extract folder
tar -xJpf $archive_file -C $PKG_EXTRACT_PATH
# copy the package into it's installed destinations
#cp -Rpf $PKG_EXTRACT_PATH/* $PKG_INSTALL_PATH
# clean the extract folder of files created during this run
#rm -rf $PKG_EXTRACT_PATH/*

#exit 0

# experiemental

# pass #1
# create needed directories
while read line; do
	# skip files
	if [[ -f "$PKG_EXTRACT_PATH/$line" ]]; then
		continue
	# create directory if it does not already exist
	elif [[ -d "$PKG_EXTRACT_PATH/$line" ]]; then
		mkdir -p "$line"
	# if target path points to neither file nor directory but isnt empty, throw an error
	elif [[ -z "$line" ]]
		echo "WARNING: could not locate file/dir: $line"
	fi

done < $trace_file

# pass #2
# move files
while read line; do
	# skip directories
	if [[ -d "$PKG_EXTRACT_PATH/$line" ]]; then
		continue
	# move files from PKG_EXTRACT_PATH to PKG_INSTALL_PATH
	elif [[ -f "$PKG_EXTRACT_PATH/$line" ]]; then
		mv -fp "$PKG_EXTRACT_PATH/$line" "$PKG_INSTALL_PATH/$line"
	# if target path points to neither file nor directory but isnt empty, throw an error
	elif [[ -z "$line" ]]
		echo "WARNING: could not locate file/dir: $line"
	fi
done < $trace_file

exit 0:
