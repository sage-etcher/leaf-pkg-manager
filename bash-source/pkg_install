#  
#  This source file is a part of the Leaf Package Manager.
#  https://github.com/sage-etcher/leaf-pkg-manager
# 
#  /bash_source/pkg_install
#  A bash script for installing a local package to the system.
# 
#  
#
#  
#  Copyright 2023-2024 Sage I. Hendricks
# 
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# 
#  
#
#  
#  email:  sage.message@email.com
#  github: sage-etcher
# 
#  


#!/bin/bash

# PKG_ARCHIVE_PATH & PKG_EXTRACT_PATH & PKG_INSTALL_PATH must be set
. pkg_init
if [ -z "$PKG_ARCHIVE_PATH" ] || 
   [ -z "$PKG_EXTRACT_PATH" ] || 
   [ -z "$PKG_INSTALL_PATH" ]
then
	echo "ERROR: package enviornment variables are not set"
	exit -1
fi

# install a premade package to the system
# param #1 = package archive file

# make sure that the package exsists
if [ ! -f "$PKG_ARCHIVE_PATH/$1.tar.xz" ] ||
   [ ! -f "$PKG_TRACES_PATH/$1.trace" ]
then
	echo "ERROR: no such package"
	exit -1
fi

# get the needed files for the package
archive_file="$PKG_ARCHIVE_PATH/$1.tar.xz"
trace_file="$PKG_TRACES_PATH/$1.trace"

# make sure the extract folder exists
mkdir -p "$PKG_EXTRACT_PATH"
# clean extract folder of any any previous bad files (in case of previous failure)
rm -rf "$PKG_EXTRACT_PATH/*"

# dump the package archive into the extract folder
tar -xJpf "$archive_file" -C "$PKG_EXTRACT_PATH"

# move the package into its final location
while read line; do
	
	# if path isn't recognized as a directory or a file, and isn't an empty string, throw a warning
	if [ ! -e "$PKG_EXTRACT_PATH/$line" ] && 
	   [ ! -L "$PKG_EXTRACT_PATH/$line" ] && 
	   [ ! -z "$line" ]
	then
		echo "WARNING: could not find the file/directory specified: $line"
		continue
	fi

	# get the directory we want to play with
	if [ -d "$PKG_EXTRACT_PATH/$line" ]; then
		directory="$line"
	else
		directory=$(dirname "$line")
	fi
	
	# copy directory owner + permissions onto the new one
	mkdir -p "$PKG_EXTRACT_PATH/$directory"
	chown --reference="$PKG_EXTRACT_PATH/$directory" "$PKG_INSTALL_PATH/$directory"
	chmod --reference="$PKG_EXTRACT_PATH/$directory" "$PKG_INSTALL_PATH/$directory"

	# move file if applicable
	if [ ! -d "$PKG_EXTRACT_PATH/$line" ]; then
		mv -f "$PKG_EXTRACT_PATH/$line" "$PKG_INSTALL_PATH/$line"
	fi

done < $trace_file

# clean up anything left in the PKG_EXTRACT_PATH directory
rm -rf "$PKG_EXTRACT_PATH/*"


# exit successfully
exit 0
