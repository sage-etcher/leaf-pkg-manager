#  
#  This source file is a part of the Leaf Package Manager.
#  https://github.com/sage-etcher/leaf-pkg-manager
# 
#  /bash_source/pkg_alias
#  A bash script for creating a symlink alias of an local package.
# 
#  
#
#  
#  Copyright 2023-2024 Sage I. Hendricks
# 
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# 
#  
#
#  
#  email:  sage.message@email.com
#  github: sage-etcher
# 
#  


#!/bin/bash

# PKG_TRACES_PATH & PKG_ARCHIVE_PATH must be set
. pkg_init
if [ -z "$PKG_TRACES_PATH" ] &&
   [ -z "$PKG_ARCHIVE_PATH" ]
then
    echo "ERROR: package enviorment variables are not set"
    exit -1
fi

# add an alias for a package, 
# for example linking "skype-2.12.4-dev" to "skype"
# param #1 current package name
# param #2 alias name

# if the package doesnt exists, throw an error
if [ ! -f "$PKG_TRACES_PATH/$1.trace" ] ||
   [ ! -f "$PKG_ARCHIVE_PATH/$1.tar.xz" ]
then
    echo $PKG_TRACES_PATH $PKG_ARCHIVE_PATH $1
    echo "ERROR: no such package"
    exit -1
fi

# get the packages files
trace_file="$PKG_TRACES_PATH/$1.trace"
archive_file="$PKG_ARCHIVE_PATH/$1.tar.xz"

if [ -z "$2" ]; then
    echo "ERROR: alias name not given"
    exit -1
fi

# get the aliased package files
new_trace_file="$PKG_TRACES_PATH/$2.trace"
new_archive_file="$PKG_ARCHIVE_PATH/$2.tar.xz"

# throw a warning if the alias name exists
if [ -f "$new_trace_file" ]   ||
   [ -f "$new_archive_file" ] ||
   [ -L "$new_trace_file" ]   ||
   [ -L "$new_archive_file" ]
then
    valid_input=0
    confirmation=
    while [ $valid_input != 1 ]; do
        echo "WARNING: A package with the same name already exists, would you like to overwrite it?"
        read -p "[y/n] " confirmation

        if [[ "${confirmation,,}" == "y" || "${confirmation,,}" == "n" ]]; then
            valid_input=1
        fi
    done

    if [[ "${confirmation,,}" == "n" ]]; then
        exit 0
    fi

fi

# create symlinks of the files
ln -sf "$(basename $trace_file)" "$new_trace_file"
ln -sf "$(basename $archive_file)" "$new_archive_file"

# exit the program successfully
exit 0
